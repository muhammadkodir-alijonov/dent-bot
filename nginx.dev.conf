# Development Nginx Configuration
# Oddiy HTTP, SSL yo'q, debugging enabled

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging for debugging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    upstream web {
        server backend:8000;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/javascript 
        application/xml+rss 
        application/json;

    # Development server (HTTP only)
    server {
        listen 80;
        server_name localhost 127.0.0.1;

        # Security headers (basic for dev)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # File upload size (generous for dev)
        client_max_body_size 100M;
        
        # Disable caching for development
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";

        # Static files (no caching for dev)
        location /static/ {
            alias /app/static/;
            expires -1;
            add_header Cache-Control "no-cache";
        }

        location /uploads/ {
            alias /app/uploads/;
            expires -1;
            add_header Cache-Control "no-cache";
        }

        # API endpoints (no rate limiting for dev)
        location /api/ {
            proxy_pass http://web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS for development
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
        }

        # All other requests
        location / {
            proxy_pass http://web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Development debugging
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}